@startuml clases

hide empty members
skinparam linetype polyline
skinparam arrowLollipopColor #ADD1B2

MainView -right(0- MainPresenter : IMainContract.Presenter
MainView -right0)- MainPresenter : IMainContract.View
MainView -up..-> InfoView : <<use>>
MainView -down..> DetailsView : <<use>>
MainPresenter -right(0- GasolinerasRepository : IGasolinerasRepository

Filtros -down0)- MainPresenter : IFiltros


class MainPresenter {
    -load()
    -getPrecioCombustible(Gasolinera gasolinera, Combustible combustible)
}
class Filtros {

     - esCompanhiaConocida(String companhia): boolean

}

class MainView {

     -updateMunicipiosSpinner(List<Municipio> municipios) : void
     -getPositionInSpinner(Spinner spinner, String value) : int
     -asignaAdapterASpinner (Spinner spinner, int arrayResourceId) : void
     -cargarFiltros() : FiltrosSeleccionados
     -configurarFiltros(FiltrosSeleccionados filtros, Spinner spnProvincias, Spinner spnMunicipios,Spinner spnCompanhia, CheckBox checkEstado, TextView tvCombustible) : void
     -aplicarFiltros(FiltrosSeleccionados filtros, Spinner spnProvincias,Spinner spnCompanhia, CheckBox checkEstado) : void
     -guardarFiltros(FiltrosSeleccionados filtros) : void
     -configureFuelSelection(RelativeLayout rlCombustible, TextView tvCombustible, List<String> tempCombustiblesSeleccionados) : void
     -updateFuelText(TextView tvCombustible) : void
     -clearSelection(boolean[] seleccionados, List<String> tempCombustiblesSeleccionados, TextView tvCombustible) : void
     -resetSharedPreferences() : void
     -compruebaFormato(EditText et) :void
     -applyCoordinates(EditText etLongitud, EditText etLatitud, TextView tvDistancia) : void
     -getPositionInSpinner(Spinner spinner, String value) : void
     -asignaAdapterASpinner (Spinner spinner, int arrayResourceId) : void

}

interface IMainContract#View {
    + init() : void
    + getGasolinerasRepository() : IGasolinerasRepository
    + showStations(List<Gasolinera> stations) : void
    + showLoadCorrect(int stations) : void
    + showLoadError() : void
    + showStationDetails(Gasolinera station) : void
    + showInfoActivity() : void
    + showFiltersPopUp() : void
    + showCoordinatesPopUp() : void
    + showOrdenarPopUp() : void
    + updateMunicipiosSpinner(List<Municipio> municipios) : void
}

interface IFiltros {
    + filtrarPorProvinciaYMunicipio(List<Gasolinera> gasolineras,String provincia, String municipio):List<Gasolinera>
    + filtrarPorEstado(List<Gasolinera> gasolineras):List<Gasolinera>
    + filtrarPorCompanhia(List<Gasolinera> gasolineras, String companhia):List<Gasolinera>
}

interface IMainContract#Presenter {
    + init(IMainContract.View view) : void
    + onStationClicked(Gasolinera station) : void
    + onMenuInfoClicked() : void
    + onFilterButtonClicked() : void
    + onSearchStationsWithFilters(String provincia, String municipio,List<String> combustibles,boolean abierto,String companhia) : void
    + onProvinciaSelected(String provinciaNombre) : void
    + onOrdenarButtonClicked() : void
    + ordenarGasolinerasPorPrecio(String combustible, String orden) : void
    + onCoordinatesButtonClicked() : void
    + searchWithCoordinates(Double longitud, Double latitud, int distancia) : void
 
}

interface IGasolinerasRepository {
    + requestGasolineras(ICallBack cb)
}

interface ICallBack {
    + onSuccess(List<Gasolinera> gasolineras)
    + onFailure(Throwable e)
}


@enduml